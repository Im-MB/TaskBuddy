@using Microsoft.AspNetCore.Identity
@inject UserManager<Utilisateur> UserManager
@model IEnumerable<Utilisateur>

@{
    ViewData["Title"] = "Liste Utilisateur";
}

<h1>List Users</h1>
@if (UserManager.GetUserAsync(User).Result.Role == "admin")
{
    <p>
        <a asp-action="Create">Create New</a>
    </p>
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.UserName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Prenom)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Nom)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Email)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Ville)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Adresse)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Role)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Profil)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.UserName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Prenom)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Nom)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Email)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Ville)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Adresse)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Role)
                    </td>
                    <td>
                        @if (UserManager.GetUserAsync(User).Result.Profil is not null)
                        {
                            <img class="rounded-circle" alt="Profil" width="40" height="40" src="data:image/*;base64,@(Convert.ToBase64String(UserManager.GetUserAsync(User).Result.Profil))" />

                        }
                        else
                        {
                            <img id="Profil" class="rounded-circle" alt="Profil" width="40" height="40" src="~/uploads/avatar-male.jpg" />
                        }
                    </td>
                    <td>
                        @if (UserManager.GetUserId(User) != item.Id)
                        {
                        <a asp - action = "Delete" asp - route - id = "@item.Id" > Delete </a>
                        }
                        <a asp-action="Details" asp-route-id="@item.Id">Details</a>

                        <a asp-action="EditUtilisateur" asp-route-id="@item.Id">Edit</a>

                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <div>YOU ARE NOT ADMIN</div>
}