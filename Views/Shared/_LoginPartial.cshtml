@using Microsoft.AspNetCore.Identity
@inject SignInManager<Utilisateur> SignInManager
@inject UserManager<Utilisateur> UserManager
        
<ul class="navbar-nav login_ul">
@if (SignInManager.IsSignedIn(User))
{       
        @if (UserManager.GetUserAsync(User).Result.Profil is not null)
        {
            <li class="nav-item" style="margin-left: 50px;">
                <img class="rounded-circle" alt="Profil" width="52" height="52" src="data:image/*;base64,@(Convert.ToBase64String(UserManager.GetUserAsync(User).Result.Profil))" />
            </li>
        }
        <li class="nav-item">
            <a  class="nav-link text-dark login_userName" asp-area="Identity" asp-page="/Account/Manage/ProfileChange" title="Manage">@User.Identity?.Name</a>
            <a class="nav-link text-dark login_score" title="Manage"><i class="fa-solid fa-star" style="color:rgba(252, 164, 101, 0.88)"></i> Score : @UserManager.GetUserAsync(User).Result.MyScore</a>
        </li>
        
}       
else
{       
    <li class="nav-item">
            <a class=" register_b" asp-area="Identity" asp-page="/Account/Register" >Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}       
</ul>
@if (SignInManager.IsSignedIn(User))
{
    <div class="nav-item" style="margin-left: 50px;">
        <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button type="submit" class="nav-link btn btn-link logout">Logout</button>
        </form>
    </div>
}