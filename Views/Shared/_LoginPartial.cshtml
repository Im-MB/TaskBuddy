@using Microsoft.AspNetCore.Identity
@inject SignInManager<Utilisateur> SignInManager
@inject UserManager<Utilisateur> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
{
        @if (UserManager.GetUserAsync(User).Result.Profil is not null)
        {
            <li class="nav-item">
                <img class="rounded-circle" alt="Profil" width="40" height="40" src="data:image/*;base64,@(Convert.ToBase64String(UserManager.GetUserAsync(User).Result.Profil))" />
            </li>
        }
        <li class="nav-item">
        <a  class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity?.Name!</a>
    </li>
    <li class="nav-item">
        <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button  type="submit" class="nav-link btn btn-link text-dark">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
